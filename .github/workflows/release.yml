name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Build binaries
        run: |
          chmod +x ./build.sh
          ./build.sh

      # =========================
      #  NEW ‚Äì pack release sets
      # =========================
      - name: Package release bundles
        run: |
          set -e
          echo "üîç CWD before cd: $(pwd)"
          echo "üìÇ Listing:"
          ls -la || true

          cd "${GITHUB_WORKSPACE:-/github/workspace}" || exit 1

          echo "üì¶ In workspace: $(pwd)"
          echo "üóÉÔ∏è  Files:"
          ls -la
          echo "üñºÔ∏è  Images:"
          ls -la images || true

          mkdir -p dist

          # --- *nix tarballs --------------------------
          for os in linux darwin; do
            for arch in amd64 arm64 386; do
              bin_path="build/fictusvnc-${os}-${arch}"
              [ -f "$bin_path" ] || continue

              workdir="dist/${os}-${arch}"
              mkdir -p "$workdir/images"
              cp "$bin_path" "$workdir/fictusvnc"
              chmod +x "$workdir/fictusvnc"
              cp servers.toml "$workdir/"
              cp images/default.png "$workdir/images/"

              tar -C dist -czf build/fictusvnc-${os}-${arch}.tar.gz ${os}-${arch}
            done
          done

          # --- Windows ZIPs --------------------------
          for arch in amd64 386; do
            bin_path="build/fictusvnc-windows-${arch}.exe"
            [ -f "$bin_path" ] || continue

            workdir="dist/windows-${arch}"
            mkdir -p "$workdir/images"
            cp "$bin_path" "$workdir/fictusvnc.exe"
            cp servers.toml "$workdir/"
            cp images/default.png "$workdir/images/"

            (cd dist && zip -r ../build/fictusvnc-windows-${arch}.zip windows-${arch})
          done
      - name: Create Release
        id: create_release
        if: github.ref_type == 'tag' && github.actor != 'nektos/act'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/*.tar.gz
            build/*.zip
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
